@startuml "Przypadki użycia"
left to right direction

actor Klient as client
actor Pizzerman as pizzerman
actor "Operator płatności" as payments_operator
actor "Operator dostaw" as delivery_operator

rectangle "Zamawianie pizzy (aplikacja www dla pojedyńczej pizzerii)" {
    (Aktualizacja listy dań [UC1]) as UC1
    (Przeglądanie listy dań [UC2]) as UC2
    (Złożenie zamówienia [UC3]) as UC3
    (Przygotowanie do odbioru [UC4]) as UC4

    client --> UC3
    client --> UC2
    pizzerman --> UC1
    pizzerman --> UC3
    pizzerman --> UC4
    delivery_operator --> UC4
    payments_operator --> UC3
    payments_operator --> UC4
}
@enduml

@startuml "Diagram klas"
    class ListaPizz
    note left: Lista wszystkich rodzajów pizzy dostępnych dla klientów do stworzenia zamówienia

    class Pizza {
        String nazwa
        String rozmiar
    }
    note left of Pizza::nazwa
        Na przykład 'Hawajska'
    end note
    note left of Pizza::rozmiar
        Na przykład 'Mała, Średnia, Duża, Familijna'
    end note

    class Zamówienie {
        Pizza pizza
        Integer ilość
        Płatność płatność
        StatusZamówienia status
    }

    enum StatusZamówienia {
        STWORZONE
        ...
        ODEBRANE
    }

    class Płatność {

    }

    ListaPizz o-- Pizza : zawiera
    Płatność --> Zamówienie : opłaca
    Zamówienie o-- Pizza

@enduml

@startuml "Stany Zamówienia"
state Zamówienie {
    state "Stworzone" as Created
    state "Opłacone" as Payed
    state "Przyjęte" as Accepted
    state "Zrealizowane" as Finished
    state "Odebrane" as Delivered
    [*] --> Created
    Created -> Payed
    Payed --> Accepted
    Accepted -> Finished
    Finished -> Delivered
    Delivered --> [*]
}
@enduml

